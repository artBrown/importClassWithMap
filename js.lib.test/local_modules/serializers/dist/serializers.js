"use strict";var _stream=_interopRequireDefault(require("stream")),_readline=_interopRequireDefault(require("readline")),_fs=require("fs"),_util=require("util"),_os=_interopRequireDefault(require("os"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,r,t,n,a,i,o){try{var u=e[i](o),s=u.value}catch(e){return void t(e)}u.done?r(s):Promise.resolve(s).then(n,a)}function _asyncToGenerator(e){return function(){var r=this,t=arguments;return new Promise((function(n,a){var i=e.apply(r,t);function o(e){asyncGeneratorStep(i,n,a,o,u,"next",e)}function u(e){asyncGeneratorStep(i,n,a,o,u,"throw",e)}o(void 0)}))}}function _asyncIterator(e){var r;if("undefined"!=typeof Symbol){if(Symbol.asyncIterator&&null!=(r=e[Symbol.asyncIterator]))return r.call(e);if(Symbol.iterator&&null!=(r=e[Symbol.iterator]))return r.call(e)}throw new TypeError("Object is not async iterable")}var Readable=_stream.default.Readable,pipeline=(0,_util.promisify)(_stream.default.pipeline);function writeStringToFile(e,r,t){return _writeStringToFile.apply(this,arguments)}function _writeStringToFile(){return(_writeStringToFile=_asyncToGenerator(regeneratorRuntime.mark((function e(r,t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,writeStringArrayToFile([r],t,n);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function writeStringArrayToFile(e,r,t){return _writeStringArrayToFile.apply(this,arguments)}function _writeStringArrayToFile(){return(_writeStringArrayToFile=_asyncToGenerator(regeneratorRuntime.mark((function e(r,t,n){var a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t||(t=_os.default.tmpdir()),a=Readable.from(r,{encoding:"utf8"}),i=(0,_fs.createWriteStream)(t+"/"+n),e.next=5,pipeline(a,i);case 5:i.end();case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function readStringFmFile(e,r,t){return _readStringFmFile.apply(this,arguments)}function _readStringFmFile(){return(_readStringFmFile=_asyncToGenerator(regeneratorRuntime.mark((function e(r,t,n){var a,i,o,u=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=!(u.length>3&&void 0!==u[3])||u[3],t||(t=_os.default.tmpdir()),i=(0,_fs.createReadStream)(t+"/"+n,{encoding:"utf8"}),e.next=5,readableToString(r,i);case 5:a&&(o=r.reduce((function(e,r){return e+r})),r.length=0,r.push(o));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function readableToString(e,r){var t,n,a,i,o,u,s;return regeneratorRuntime.async((function(c){for(;;)switch(c.prev=c.next){case 0:t=!0,n=!1,c.prev=2,i=_asyncIterator(r[Symbol.asyncIterator]());case 4:return c.next=6,regeneratorRuntime.awrap(i.next());case 6:return o=c.sent,t=o.done,c.next=10,regeneratorRuntime.awrap(o.value);case 10:if(u=c.sent,t){c.next=17;break}s=u,e.push(s);case 14:t=!0,c.next=4;break;case 17:c.next=23;break;case 19:c.prev=19,c.t0=c.catch(2),n=!0,a=c.t0;case 23:if(c.prev=23,c.prev=24,t||null==i.return){c.next=28;break}return c.next=28,regeneratorRuntime.awrap(i.return());case 28:if(c.prev=28,!n){c.next=31;break}throw a;case 31:return c.finish(28);case 32:return c.finish(23);case 33:case"end":return c.stop()}}),null,null,[[2,19,23,33],[24,,28,32]],Promise)}function makeIterator(e){var r=0;return{next:function(){return r<e.length&&e[r++]},hasNext:function(){return r<e.length}}}var rl=_readline.default.createInterface({input:process.stdin,output:process.stdout});module.exports={writeStringToFile:writeStringToFile,readStringFmFile:readStringFmFile,makeIterator:makeIterator,rl:rl};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
